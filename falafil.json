 "name": "MyFirstPulseConnector",
    "config": {
        "connector.class": "io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector",
        "fs.cleanup.policy.class": "io.streamthoughts.kafka.connect.filepulse.fs.clean.LogCleanupPolicy",
        "fs.listing.class": "io.streamthoughts.kafka.connect.filepulse.fs.LocalFSDirectoryListing",
        "fs.listing.directory.path": "/tmp/kafka-connect/examples/",
        "fs.listing.interval.ms": "10000",
        "read.max.wait.ms": "5000",
        "topic": "test-JSON",
        "tasks.reader.class": "io.streamthoughts.kafka.connect.filepulse.fs.reader.LocalBytesArrayInputReader",
        "tasks.file.status.storage.class": "io.streamthoughts.kafka.connect.filepulse.state.KafkaFileObjectStateBackingStore",
        "tasks.file.status.storage.bootstrap.servers": "broker:29092",
        "tasks.file.status.storage.topic": "connect-file-pulse-status",
        "tasks.file.status.storage.topic.partitions": 2,
        "tasks.file.status.storage.topic.replication.factor": 1,
        "tasks.max": 1,
        "filters.ParseJSON.type": "io.streamthoughts.kafka.connect.filepulse.filter.JSONFilter",
        "filters.ParseJSON.source": "message",
        "filters.ParseJSON.merge": "true",
        "fs.scan.directory.path": "/tmp/kafka-connect/examples/",
        "fs.scan.interval.ms": "10000",
        "fs.scan.filters": "io.streamthoughts.kafka.connect.filepulse.scanner.local.filter.RegexFileListFilter",
        "file.filter.regex.pattern": ".*\\.json$",
        "offset.strategy": "name",
        "filters.Explode.type": "io.streamthoughts.kafka.connect.filepulse.filter.ExplodeFilter",
        "filters": "ParseJSON, Explode, ExcludeFieldMessage",
        "filters.Explode.source": "cars",
        "filters.ExcludeFieldMessage.type": "io.streamthoughts.kafka.connect.filepulse.filter.ExcludeFilter",
        "filters.ExcludeFieldMessage.fields": "message"
    }
